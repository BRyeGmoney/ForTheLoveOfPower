//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using Gamelogic.Grids;

namespace AssemblyCSharp
{
	public enum MilitaryUnitType
	{
		Dictator,
		Infantry,
		Tank,
		Jet,
	}

	public class MilitaryUnit
	{
		private List<PointyHexPoint> movementPath;
		private int unitAmount = 1;

		public List<MilitaryUnit> Subordinates
		{
			get { return subordinates; }
		}
		private List<MilitaryUnit> subordinates;
		
		public MilitaryUnitType UnitType 
		{ 
			get { return unitType; } 
			set { unitType = value; } 
		}
		private MilitaryUnitType unitType;

		public MilitaryUnit ()
		{
		}

		public PointyHexPoint GetNextMoveInPath()
		{
			PointyHexPoint nextPoint = movementPath [0];
			movementPath.RemoveAt (0);
			return nextPoint;
		}

		public void SetMovementPath(List<PointyHexPoint> newPath)
		{
			movementPath = newPath;
		}

		public void AddUnits(int amountToAdd)
		{
			unitAmount += amountToAdd;
		}

		public void AddSubordinate(MilitaryUnit unitToCommand)
		{
			if (subordinates == null)
				subordinates = new List<MilitaryUnit> ();
			
			subordinates.Add (unitToCommand);
		}

		public void AddSubordinates(List<MilitaryUnit> unitsToCommand)
		{
			if (subordinates == null)
				subordinates = new List<MilitaryUnit> ();

			subordinates.AddRange (unitsToCommand);
		}


	}

	public static class CreateMilitaryUnit
	{
		public static MilitaryUnit CreateDictator()
		{
			return new MilitaryUnit() { UnitType = MilitaryUnitType.Dictator };
		}
	}
}

